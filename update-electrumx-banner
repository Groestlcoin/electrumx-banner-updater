#!/bin/bash

# update electrumx banner to report groestlcoin memory pool, fees, height and time since last block
# activate with cron job similar to this
#*/2 * * * *  ~/bin/update-electrumx-banner

# specify your groestlcoin-cli location
GROESTLCOIN_CLI=/usr/bin/groestlcoin-cli

# specify your groestlcoin data directory
GROESTLCOIN_DATADIR=~/.groestlcoin

# specify the location of your electrumx banner file
# note: uses %{BANNER}.template as the template (top portion) of each banner update
BANNER=/home/electrum-grs/banner

# specify path to electrumx_rpc.py (.py removed as of 1.5)
ELECTRUMX_RPC=/usr/local/bin/electrumx_rpc

# specify electrumx RPC port
RPC_PORT=8000

TFILE=/tmp/update-electrumx-banner-$$

# save initial banner as template for creation of new banners
if [ ! -f ${BANNER}.template ]; then
	cp ${BANNER} ${BANNER}.template
fi

# create new banner from template
cp ${BANNER}.template ${BANNER}.new

# electrum network status
${ELECTRUMX_RPC} getinfo > $TFILE
mySessions=`grep \"count\" $TFILE | grep -o '[0-9]*'`
goodPeers=`grep good $TFILE | grep -o '[0-9]*'`

echo There are currently ${goodPeers} public electrum servers. >> ${BANNER}.new
echo This server has ${mySessions} anonymous electrum connections. >> ${BANNER}.new
echo "" >> ${BANNER}.new

# timestamp
printf "As of %s " "$(date -u)" >> ${BANNER}.new

# mempool
MEMPOOL=`${GROESTLCOIN_CLI} -datadir=${GROESTLCOIN_DATADIR} getmempoolinfo | grep size | grep -o '[0-9\.]*'`
printf "there are %'d transactions in the memory pool\n" ${MEMPOOL} >> ${BANNER}.new

# report last block and current height from electrumx journal
journalctl --since "6 hours ago" -u electrumx-grs -o short-iso --utc | grep Prefetcher:new | tail -n 1 > ${TFILE}
if [ `wc -c < ${TFILE}` -gt 10 ]; then
	block_height=`< ${TFILE} awk '{print $7}'`
	block_time=`< ${TFILE} awk '{print $1}'`
	block_utime=`date -ud $block_time +'%s'`
	now_utime=`date +'%s'`
	minutes_ago=`echo ${now_utime} ${block_utime} | awk '{print int(($1-$2)/6)/10}'`
	echo "Last block: ${minutes_ago} minutes ago; current height: ${block_height}" >> ${BANNER}.new
fi
rm ${TFILE}

# get exchange rate and average fee per gro
USDPERGRS=`curl -m 10 -L -s 'https://api.coingecko.com/api/v3/simple/price?ids=groestlcoin&vs_currencies=usd' | python3 -c 'import sys, json; j=json.load(sys.stdin); print(j["groestlcoin"]["usd"])'`
TICKER=GRS
BYTESPERTX=168
USDPERSAT=`echo ${USDPERGRS} | awk '{print $1/100000000}'`

printf "Current exchange rate = %0.2f USD/%s; typical TX size = %d bytes\n" ${USDPERGRS} ${TICKER} ${BYTESPERTX} >> ${BANNER}.new

# save backup of original banner on first run (just in case...)
if [ ! -f ${BANNER}.backup ]; then
	cp ${BANNER} ${BANNER}.backup
fi

# replace banner with newly generated version
mv ${BANNER}.new ${BANNER}
